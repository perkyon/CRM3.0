import { createClient } from '@supabase/supabase-js';

const SUPABASE_URL = 'https://ykdtitukhsvsvnbnskit.supabase.co';
const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InlrZHRpdHVraHN2c3ZuYm5za2l0Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NjE2Nzg3MjAsImV4cCI6MjA3NzI1NDcyMH0.tjCfpEG30rxaCuu22EmV3kKGxH45FDMTJNuPknpsl7w';

const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);

console.log('\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É...\n');

async function testLogin() {
  try {
    // 1. –ü—ã—Ç–∞–µ–º—Å—è –≤–æ–π—Ç–∏
    console.log('1Ô∏è‚É£ –í—Ö–æ–¥ —á–µ—Ä–µ–∑ Supabase Auth...');
    const { data: authData, error: authError } = await supabase.auth.signInWithPassword({
      email: 'fominsevil@gmail.com',
      password: 'admin123',
    });

    if (authError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞:', authError.message);
      return;
    }

    console.log('‚úÖ –í—Ö–æ–¥ —É—Å–ø–µ—à–µ–Ω!');
    console.log('   User ID:', authData.user.id);
    console.log('   Email:', authData.user.email);

    // 2. –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ç–∞–±–ª–∏—Ü—ã
    console.log('\n2Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã users...');
    const { data: userData, error: userError } = await supabase
      .from('users')
      .select('*')
      .eq('id', authData.user.id)
      .single();

    if (userError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö:', userError.message);
      console.error('   Code:', userError.code);
      console.error('   Details:', userError.details);
      
      // –ü—Ä–æ–±—É–µ–º –±–µ–∑ .single()
      console.log('\n3Ô∏è‚É£ –ü—Ä–æ–±—É–µ–º –±–µ–∑ .single()...');
      const { data: allUsers, error: allError } = await supabase
        .from('users')
        .select('*')
        .eq('id', authData.user.id);
      
      if (allError) {
        console.error('‚ùå –í—Å—ë —Ä–∞–≤–Ω–æ –æ—à–∏–±–∫–∞:', allError.message);
      } else {
        console.log('‚úÖ –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π:', allUsers?.length || 0);
        if (allUsers && allUsers.length > 0) {
          console.log('   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', allUsers[0]);
        }
      }
      return;
    }

    console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã!');
    console.log('   Name:', userData.name);
    console.log('   Role:', userData.role);
    
    console.log('\nüéâ –í–°–Å –†–ê–ë–û–¢–ê–ï–¢!\n');

  } catch (error) {
    console.error('\nüí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
  }
}

testLogin();

